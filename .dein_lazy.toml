#-------------------------------------------------------
# ステータスライン表示設定
#-------------------------------------------------------
[[plugins]]
repo        = 'itchyny/lightline.vim'
hook_source = '''
    set laststatus=2
    let g:lightline = {
        \ 'colorscheme': 'wombat',
        \ 'active': {
        \   'right': [ [ 'syntastic', 'lineinfo' ],
        \              [ 'percent' ],
        \              [ 'fileformat', 'fileencoding', 'filetype' ] ]
        \ },
        \ 'component_expand': {
        \   'syntastic': 'SyntasticStatuslineFlag',
        \ },
        \ 'component_type': {
        \   'syntastic': 'error',
        \ }
        \ }
    augroup AutoSyntastic
        autocmd!
        autocmd BufWritePost *.c,*.cpp call s:syntastic()
    augroup END
    function! s:syntastic()
        SyntasticCheck
        call lightline#update()
    endfunction
'''

#-------------------------------------------------------
# ファイル操作関連
#-------------------------------------------------------
# ファイラー
[[plugins]]
repo        = 'Shougo/vimfiler'
depends     = 'unite.vim'
hook_source = '''
    " Default filer
    let g:vimfiler_as_default_explorer = 1
    " VimFilerBufferDir Key
    nnoremap <silent> <leader>fb  :<C-u>VimFilerBufferDir -split -simple -winwidth=35 -no-quit -auto-cd<CR>
    " VimExplorer Key
    nnoremap <silent> <leader>fe  :VimFilerExplorer -split -simple -winwidth=35 -no-quit -auto-cd<CR>
    NeoBundle 'scrooloose/syntastic'
    let g:syntastic_enable_signs=1
    let g:syntastic_auto_loc_list=2

    let g:syntastic_mode_map = {
                \ "mode" : "passive",
                \ "active_filetypes" : ["javascript", "json","php"],
                \}
    let g:syntastic_javascript_checker = "jshint"
'''

#-------------------------------------------------------
# 入力・文字・行関連
#-------------------------------------------------------
# インデント可視化
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# クオートや括弧の自動補完
[[plugins]]
repo = 'Townk/vim-autoclose'

# テキスト整形
[[plugins]]
repo        = 'junegunn/vim-easy-align'
hook_source = '''
    " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
    vmap <Enter> <Plug>(EasyAlign)
    " Start interactive EasyAlign for a motion/text object (e.g. gaip)
    nmap ga <Plug>(EasyAlign)
'''


#-------------------------------------------------------
# 検索・置換関連
#-------------------------------------------------------
# ckfixウィンドウ内でrを押すと、各行のテキスト部分が別バッファに書き出されるプラグイン
[[plugins]]
repo = "thinca/vim-qfreplace"


#-------------------------------------------------------
# BACKEND TOOLS
#-------------------------------------------------------
# Tagsファイル作成コマンド
[[plugins]]
repo = 'soramugi/auto-ctags.vim'
hook_source = '''
    "0:自動作成無効 1:自動作成有効
    let g:auto_ctags = 1
    "tagsを作成するディレクトリを指定
    let g:auto_ctags_directory_list = ['.git', '.svn']
    "ファイルタイプ専用のtagsを自動作成
    let g:auto_ctags_filetype_mode = 1
'''
#-------------------------------------------------------
# FRONTEND TOOLS
#-------------------------------------------------------
# Emmet
[[plugins]]
repo = 'mattn/emmet-vim'
on_event = 'BufRead'
hook_source = '''
    let g:user_emmet_leader_key='<c-e>'
    let g:user_emmet_settings = {
            \ 'variables': {
            \ 'lang' : 'ja'
        \ }
    \}
'''

#-------------------------------------------------------
# Syntax , Lint
#-------------------------------------------------------
# TOML Syntax
[[plugins]]
repo = 'cespare/vim-toml'
on_event = 'BufRead'
on_ft = ['toml']

# CSS3 Syntax
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_event = 'BufRead'

# EJS Syntax
[[plugins]]
repo     = 'nikvdp/ejs-syntax'
on_event = 'BufRead'
on_event = 'BufRead'
on_ft    = 'ejs'

# JavaScript Syntax
[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_event = 'BufRead'

# ファイルの構文エラーをチェック
[[plugins]]
repo = 'scrooloose/syntastic.git'
on_event = 'BufRead'


#-------------------------------------------------------
# BROWSER
#-------------------------------------------------------
# ブラウザ自動リロード
[[plugins]]
repo = 'tell-k/vim-browsereload-mac'
if   = 'has("mac")'

# Markdown閲覧
[[plugins]]
repo     = 'plasticboy/vim-markdown'
on_event = 'BufRead'
on_ft    = 'markdown'
[[plugins]]
repo     = 'kannokanno/previm'
on_event = 'BufRead'
on_ft    = 'markdown'

#-------------------------------------------------------
# CLI
#-------------------------------------------------------
# Vimからシェルを起動するVimScript
[[plugins]]
repo = 'Shougo/vimshell'

#-------------------------------------------------------
# Git,SVN
#-------------------------------------------------------
# Gitラッパープラグイン
[[plugins]]
repo = 'tpope/vim-fugitive'

#-------------------------------------------------------
# HTTP通信機能
#-------------------------------------------------------
[[plugins]]
repo = 'mattn/webapi-vim'

